/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;
import BackEnd.*; 
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author guilh
 */
public class JPanelAtividade extends javax.swing.JPanel {

    /**
     * Creates new form JPanelAtividade
     */
    public JPanelAtividade(Turma turma, Aluno aluno) {
        initComponents();
        this.turma = turma;
        this.aluno = aluno; 
        atividadesEnv = new ArrayList<Atividade>();
        atividadesPen = new ArrayList<Atividade>();
        achaAtividadesEnv(); 
        achaAtividadesPen();
        criaAtividades(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListAtividadesPen = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListAtividadesEnv = new javax.swing.JList<>();
        jTextFieldArquivo = new javax.swing.JTextField();
        jButtonSubmeter = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jListAtividadesPen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Atividades pendentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic", 0, 11))); // NOI18N
        jListAtividadesPen.setFont(new java.awt.Font("Yu Gothic", 0, 11)); // NOI18N
        jListAtividadesPen.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Não há atividades pendentes" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListAtividadesPen);

        jListAtividadesEnv.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Atividades enviadas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic", 0, 11))); // NOI18N
        jListAtividadesEnv.setFont(new java.awt.Font("Yu Gothic", 0, 11)); // NOI18N
        jListAtividadesEnv.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Não há atividades enviadas." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListAtividadesEnv);

        jTextFieldArquivo.setFont(new java.awt.Font("Yu Gothic", 0, 11)); // NOI18N
        jTextFieldArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldArquivoActionPerformed(evt);
            }
        });

        jButtonSubmeter.setBackground(new java.awt.Color(201, 23, 48));
        jButtonSubmeter.setFont(new java.awt.Font("Yu Gothic", 1, 11)); // NOI18N
        jButtonSubmeter.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSubmeter.setText("Submeter");
        jButtonSubmeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmeterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonSubmeter)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(jTextFieldArquivo))
                .addGap(28, 28, 28)
                .addComponent(jButtonSubmeter)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void achaAtividadesEnv() {
        for(Atividade atividade:turma.getAtividades()) {
            for (Submissao submissao:atividade.getSubmissoes()) {
                if (submissao.getAluno() == null) 
                    if (submissao.getEquipe().getGrupo().contains(aluno))
                        atividadesEnv.add(atividade);
                    else
                        atividadesPen.add(atividade); 
                else 
                    if(submissao.getAluno().equals(aluno))
                        atividadesEnv.add(atividade);      
            }
        }
    }
    
    private void achaAtividadesPen() {
        if(!atividadesEnv.isEmpty()) {
            for(Atividade atividade:turma.getAtividades()) {
                    if(!atividadesEnv.contains(atividade)) 
                        atividadesPen.add(atividade); 
            }
        }
        else
            atividadesPen = new ArrayList<Atividade>(turma.getAtividades());
    }
    
    private void criaAtividades() {
        if(!(atividadesPen.isEmpty() && atividadesEnv.isEmpty())) {
            if(!atividadesPen.isEmpty()) {
                String[] listaAtividadesPenN = new String[atividadesPen.size()];
                int i = 0;
                for(Atividade atividade:atividadesPen) {
                    listaAtividadesPenN[i] = atividade.getAgendaAluno().getTitulo();
                    i++;
                }
                jListAtividadesPen.setListData(listaAtividadesPenN);
            }
            else {
                String[] listaAtividadesPenS = {"Não há atividades pendentes."};
                jListAtividadesPen.setListData(listaAtividadesPenS);
            }
            
            if(!atividadesEnv.isEmpty()) {
                String[] listaAtividadesEnvN = new String[atividadesEnv.size()];
                int j = 0;
                for (Atividade atividade:atividadesEnv) {
                    listaAtividadesEnvN[j] = atividade.getAgendaAluno().getTitulo();
                    j++;
                }
                jListAtividadesEnv.setListData(listaAtividadesEnvN);
            }
            else {
                String[] listaAtividadesEnvS = {"Não há atividades enviadas."};
                jListAtividadesEnv.setListData(listaAtividadesEnvS);
            }
        }
    }
    
    private void jButtonSubmeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmeterActionPerformed
        // TODO add your handling code here:
        if(!atividadesPen.isEmpty()) {
            int index = jListAtividadesPen.getSelectedIndex(); 
            Atividade atividade = atividadesPen.get(index); 
            if(atividade instanceof AtividadeIndividual) {
                atividade.submeterAtividade(aluno, null, jTextFieldArquivo.getText());
                JOptionPane.showMessageDialog(null, "Atividade enviada!");
                jTextFieldArquivo.setText("");
                atividadesPen.remove(atividade);
                atividadesEnv.add(atividade); 
                criaAtividades(); 
                this.revalidate();
                this.repaint();
            }
            else {
                JFrameSubmeterGrupo frameSubmeterGrupo = new JFrameSubmeterGrupo((AtividadeGrupo)atividade, aluno, jTextFieldArquivo.getText());
                frameSubmeterGrupo.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonSubmeterActionPerformed

    private void jTextFieldArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldArquivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldArquivoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSubmeter;
    private javax.swing.JList<String> jListAtividadesEnv;
    private javax.swing.JList<String> jListAtividadesPen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldArquivo;
    // End of variables declaration//GEN-END:variables
    Turma turma;
    Aluno aluno; 
    ArrayList<Atividade> atividadesPen;
    ArrayList<Atividade> atividadesEnv;
}
